"use client";

import { useEffect, useState } from "react";

const BACKEND_URL = "https://8d69-91-246-41-65.ngrok-free.app";

export default function Home() {
  const [user, setUser] = useState<any>(null);

  useEffect(() => {
    console.log("üí° useEffect —Å—Ç–∞—Ä—Ç–∞–Ω—É–ª");

    // üü¢ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –î–û –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
    // @ts-ignore
    window.handleTelegramLogin = async (userData: any) => {
      console.log("üí• handleTelegramLogin –≤—ã–∑–≤–∞–Ω");
      console.log("üë§ Telegram user data:", userData);
      try {
        const res = await fetch(`${BACKEND_URL}/auth/telegram`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(userData),
        });

        console.log("üì® /auth/telegram —Å—Ç–∞—Ç—É—Å:", res.status, res.statusText);
        const data = await res.json();
        console.log("üì• –û—Ç–≤–µ—Ç –æ—Ç /auth/telegram:", data);

        if (data.token) {
          console.log("‚úÖ JWT received:", data.token);
          localStorage.setItem("token", data.token);

          const meRes = await fetch(`${BACKEND_URL}/auth/me`, {
            headers: {
              Authorization: `Bearer ${data.token}`,
            },
          });

          const me = await meRes.json();
          console.log("üîÅ –û—Ç–≤–µ—Ç –æ—Ç /auth/me:", me);

          if (!me.error) {
            localStorage.setItem("user", JSON.stringify(me));
            window.location.reload(); // –∏–ª–∏ setUser(me)
          }
        } else {
          console.warn("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ:", data);
        }
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤ handleTelegramLogin:", err);
      }
    };

    // üü¢ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
    const token = localStorage.getItem("token");
    console.log("üì¶ token –∏–∑ localStorage:", token);

    if (token) {
      fetch(`${BACKEND_URL}/auth/me`, {
        headers: { Authorization: `Bearer ${token}` },
      })
        .then((res) => res.json())
        .then((data) => {
          console.log("üîÅ –û—Ç–≤–µ—Ç –æ—Ç /auth/me –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ:", data);
          if (!data.error) setUser(data);
        })
        .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ fetch /auth/me:", err));
    } else {
      console.log("‚ö†Ô∏è –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–µ –¥–µ–ª–∞–µ–º /auth/me");
    }

    // üü¢ –í—Å—Ç–∞–≤–ª—è–µ–º Telegram widget
    console.log("üì¶ –í—Å—Ç–∞–≤–ª—è—é Telegram widget");
    const script = document.createElement("script");
    script.src = "https://telegram.org/js/telegram-widget.js?7";
    script.async = true;
    script.setAttribute("data-telegram-login", "BotverseAuth_bot");
    script.setAttribute("data-size", "large");
    script.setAttribute("data-userpic", "false");
    script.setAttribute("data-request-access", "write");
    script.setAttribute("data-onauth", "handleTelegramLogin(user)");
    document.getElementById("telegram-button")?.appendChild(script);
  }, []);

  return (
    <div className="p-10">
      {user ? (
        <pre>{JSON.stringify(user, null, 2)}</pre>
      ) : (
        <div id="telegram-button" />
      )}
    </div>
  );
}
